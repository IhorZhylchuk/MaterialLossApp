@model Item;
@{
    ViewData["Title"] = "Home Page";
    var opakowania = ViewBag.Opakowania;
    var orders = ViewBag.Orders as string[];

}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" rel="stylesheet" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/jquery.bootstrapvalidator/0.5.2/css/bootstrapValidator.min.css" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css" />
<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css' rel='stylesheet'>

<style>
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .colored-toast.swal2-icon-success {
        background-color: #a5dc86 !important;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }

    .modal-backdrop {
        opacity: 0.01 !important;
    }

    #alertModal.fade .modal-dialog {
        transform: translate3d(0, -100vh, 0);
    }

    #alertModal.show .modal-dialog {
        transform: translate3d(0,0, 0);
    }

    #formElement {
        padding: 5px;
    }

    #fullScreenDialog {
        padding: 50px;
    }

    .wasteRow {
        width: 14.2%;
    }

    td, th {
        text-align: center !important;
    }

    .color3 {
        background-color: #ff0000; /* red */
    }

    .color2 {
        background-color: green; /* green */
    }

    .color1 {
        background-color: grey;
    }

    .comment {
        margin-top: 10px;
    }

    .spanDecor {
        font-weight: bolder;
    }

    .inputQA {
        width: 100px !important;
    }

</style>
<main style="margin-top: 130px">
    <div id="liveAlertPlaceholder"></div>
    <div class="container" style="width:100%">
        <div class="form-group">
            <a style="margin-bottom: 10px; color: white" class="btn btn-primary" id="nZlecenie" data-toggle="modal" data-bs-target="#zlecenie">Dodaj zlecenie</a>
        </div>
        <div class="form-group">
            <a style="margin-bottom: 10px; color: white" class="btn btn-primary" id="btnWaste" data-toggle="modal" data-bs-target="#waste">Rozliczenia</a>
        </div>
        <div class="form-group">
            <a style="margin-bottom: 10px; color: white" class="btn btn-primary" id="btnReport" data-toggle="modal" data-bs-target="#report">Raportowanie</a>
        </div>
        <div class="form-group">
            <table id="zlecenia" class="table table-striped table-bordered display" style="width:100%;margin-top:50px;">
                <thead>
                    <tr>
                        <th style="text-align: center"></th>
                        <th>Nr. zlecenia</th>
                        <th>Nazwa produktu</th>
                        <th>Ilość (kg)</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="modal fade" id="zlecenie" backdrop="static" keyboard="false" tabindex="-1" aria-labelledby="title" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="title">Nowe zlecenie</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" onclick="ReloadPage()" id="closeNewZlecenie" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-action="NoweZlecenie" method="Post" id="noweZlecenie">
                        <div class="modal-body">
                            <div class="form-group" id="formElement">
                                <input class="form-control" type="number" placeholder="Numer zlecenia" required asp-for="NrZlecenia" min="2000000" max="3000000" id="nrZlecenia" />
                                <span id="warning" style="color:red; font-size:small; font-style:normal"></span>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="recipies" class="form-select" asp-items="@ViewBag.Recipies" required asp-for="RecipesName">
                                    <option value="-1" id="optionRecipie">Wybierz recepture</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <input id="count" class="form-control" type="number" placeholder="Iłość (kg)" required min="500" max="3000" asp-for="Count" />
                                <span id="warningCount" style="color:red; font-size:small; font-style:normal"></span>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="opakowanie" class="form-select" asp-items="@ViewBag.Opakowania" required asp-for="Opakowanie">
                                    <option value="-1" id="optionOpakowanie">Wybierz opakowanie</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="dekel" class="form-select" asp-items="@ViewBag.Dekel" required asp-for="PokrywaNekrętka">
                                    <option value="-1" id="optionDekel">Pokrywa/Nakrętka</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="etykieta" class="form-select" asp-items="@ViewBag.Naklejka" required asp-for="Naklejka">
                                    <option value="-1" id="optionEtykieta">Etykieta</option>
                                </select>
                            </div>
                            <div class="form-group" id="buttonsSection" style="padding:5px">
                                <div class="col text-center">
                                    <input type="submit" value="Save" disabled id="submitButton" class="btn btn-primary" />
                                </div>
                                <span id="warningTextForOrder" style="color:red; font-size:small; font-style:normal"></span>
                            </div>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="details" backdrop="static" keyboard="false" tabindex="-1" aria-labelledby="title" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="title">Szczegóły zlecenia</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="closeZlecenie" onclick="ReloadPage()" aria-label="Close"></button>

                </div>

                <div class="modal-body">

                    <form id="zlecenieDetails">

                        <div class="modal-body">

                            <div class="form-group">
                                <span>Numer zlecenia:</span>
                                <input class="form-control" readonly id="detailsNrZlecenia" />
                            </div>
                            <div class="form-group">
                                <span>Receptura:</span>
                                <input class="form-control" readonly id="detailsReceptura" />
                            </div>
                            <div class="form-group">
                                <span>Ilość:</span>
                                <input id="totalCount" class="form-control" readonly />

                            </div>
                            <div class="form-group" id="surowce">
                                <span>Surowce:</span>
                                <table class="table table-bordered table-hover" id="tableSurowce">
                                    <tbody id="numerMaterialu">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="waste" backdrop="static" keyboard="false" tabindex="-1" aria-labelledby="title" aria-hidden="true">
        <div class="modal-dialog modal-fullscreen" id="fullScreenDialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="title">Realizacja zlecenia</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" onclick="ReloadPage()" id="closewaste" aria-label="Close"></button>

                </div>

                <div class="modal-body">

                    <form id="wasteOrder">

                        <div class="modal-body">

                            <div class="list-group-item">
                                <div class="d-inline-flex col text-center">
                                    <label for="ordersList">Zlecenie</label>
                                    <select id="ordersList" style="margin-left: 20px; width: 200px; border-color: black; text-align-last: center" class="form-select" asp-items="@ViewBag.Orders">
                                        <option value="-1" id="defaultOptionForProcess">Wybierz z listy</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <span>Receptura:</span>
                                <input class="form-control" readonly id="wasteRecepture" />
                            </div>
                            <div class="form-group">
                                <span>Ilość:</span>
                                <input id="wasteCount" class="form-control" readonly />
                            </div>
                            <div class="form-group">
                                <span>Ilość zrealizowanego zlecenia:</span>
                                <input id="wasteTotalCount" type="number" min="500" required class="form-control" disabled />
                            </div>

                            <div class="form-group" id="surowce">
                                <span>Zużycie surowców:</span>
                                <table class="table table-bordered table-hover" id="tableWaste">
                                    <thead>
                                        <tr id="mainTR">
                                            <th>Nr. materialu</th>
                                            <th>Nazwa surowca</th>
                                            <th>Ilość (planowane)</th>
                                            <th>Ilość (po obliczeniach)</th>
                                            <th>Faktyczna ilość</th>
                                            <th>Straty</th>
                                            <th>Komentarze</th>
                                        </tr>
                                    </thead>
                                    <tbody id="wasteIngredients"></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="form-group" id="" style="padding:5px">
                            <div class="col text-center">
                                <button id="submitForWaste" disabled class="btn btn-primary">Zapisz</button>
                            </div>
                            <span id="warningTextForRaport" style="color:red; font-size:small; font-style:normal"></span>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="zlecenieUpdate" backdrop="static" keyboard="false" tabindex="-1" aria-labelledby="title" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="title">Zmiana zlecenia</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" onclick="ReloadPage()" id="closeZlecenieUpdate" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-action="EditedOrder" method="Post" id="updateForm">
                        <div class="modal-body">
                            <div class="form-group" id="formElement">
                                <input hidden asp-for="Id" id="zlecenieId" />
                                <input class="form-control" type="number" readonly placeholder="Numer zlecenia" on required asp-for="NrZlecenia" min="2000000" max="3000000" id="nrZlecenieUpdate" />
                                <span id="warning" style="color:red; font-size:small; font-style:normal"></span>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="recipiesUpdate" class="form-select" asp-items="@ViewBag.Recipies" required asp-for="RecipesName">
                                    <option value="-1" id="optionRecipie">Wybierz recepture</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <input id="countUpdate" class="form-control" type="number" placeholder="Iłość (kg)" required min="500" max="3000" asp-for="Count" />
                                <span id="warningCount" style="color:red; font-size:small; font-style:normal"></span>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="opakowanieUpdate" class="form-select" asp-items="@ViewBag.Opakowania" required asp-for="Opakowanie">
                                    <option value="-1" id="optionOpakowanie">Wybierz opakowanie</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="dekelUpdate" class="form-select" asp-items="@ViewBag.Dekel" required asp-for="PokrywaNekrętka">
                                    <option value="-1" id="optionDekel">Pokrywa/Nakrętka</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <select id="etykietaUpdate" class="form-select" asp-items="@ViewBag.Naklejka" required asp-for="Naklejka">
                                    <option value="-1" id="optionEtykieta">Etykieta</option>
                                </select>
                            </div>
                            <div class="form-group" id="formElement">
                                <div class="col text-center">
                                    <input type="submit" value="Save" id="submitButtonUpdate" class="btn btn-primary" />
                                </div>
                                <span id="warningTextForOrderUpdate" style="color:red; font-size:small; font-style:normal"></span>
                            </div>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="report" backdrop="static" keyboard="false" tabindex="-1" aria-labelledby="title" aria-hidden="true">
        <div class="modal-dialog modal-fullscreen" id="fullScreenDialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="title">Raportowanie</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="closeReport" onclick="ReloadPage()" aria-label="Close"></button>

                </div>

                <div class="modal-body">
                    <div class="modal-body">

                        <div class="list-group-item">
                            <div class="d-inline-flex col text-center">
                                <label for="ordersList">Zlecenie</label>
                                <select id="reportOrdersList" style="margin-left: 20px; width: 200px; border-color: black; text-align-last: center" class="form-select" asp-items="@ViewBag.RelisedOrders">
                                    <option value="-1" id="defaultOptionForReport">Wybierz z listy</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <span>Receptura:</span>
                            <input class="form-control" readonly id="wasteReportRecepture" />
                        </div>



                        <div class="form-group">
                            <span>Ilość zrealizowanego zlecenia:</span>
                            <input id="wasteTotalCountReport" class="form-control" readonly />
                        </div>
                        <br />
                        <div class="form-control" style="border:2px; border-color: black">
                            <div class="form-group">
                                <span class="spanDecor">Pasteryzacja przeprowadzona według receptury</span>
                                <a class="btn btn-primary btn-sm color1 check" id="pasteryzacja" onclick="changeColor(this, 'input_0')">N/A</a>
                                <br />
                                <input class="form-control comment " placeholder="Proszę wpisać komentarz" id="input_0" hidden />
                            </div>
                            <br />
                            <div class="form-group">
                                <span class="spanDecor">Czy znaleziono w surowcach lub w gotowym produkcie ciała obce? Czy był poinformowany przełozony/dział jakości?</span>
                                <a class="btn btn-primary btn-sm color1 check" id="ciałaObce" onclick="changeColor(this,'input_1')">N/A</a>
                                <br />
                                <input class="form-control comment" placeholder="Proszę wpisać komentarz" id="input_1" hidden />
                            </div><br />
                            <div class="form-group">
                                <span class="spanDecor">Data umieszczona na opakowaniu odpowiada karcie produktu</span>
                                <a class="btn btn-primary btn-sm color1 check" id="dataOpakowania" onclick="changeColor(this,'input_2')">N/A</a>
                                <br />
                                <input class="form-control comment" placeholder="Proszę wpisać komentarz" id="input_2" hidden />
                            </div><br />
                            <div class="form-group">
                                <span class="spanDecor">Gotowy produkt jest zgony z recepturą?</span>
                                <a class="btn btn-primary btn-sm color1 check" id="zgodnośćReceprura" onclick="changeColor(this, 'input_3')">N/A</a>
                                <br />
                                <input class="form-control comment" placeholder="Proszę wpisać komentarz" id="input_3" hidden />
                            </div><br />
                            <div class="form-group">
                                <span class="spanDecor">Сzy był sprawdzony metaldetektor? Czy w ciągu zmiany wystepowały jakieś problemy z metaldetektorem?</span>
                                <a class="btn btn-primary btn-sm color1 check" id="metaldetektor" onclick="changeColor(this,'input_4')">N/A</a>
                                <br />
                                <input class="form-control comment" placeholder="Proszę wpisać komentarz" id="input_4" hidden />
                            </div><br />
                            <div class="form-group">
                                <span class="spanDecor">Opakowanie zgodne ze standardem?</span>
                                <a class="btn btn-primary btn-sm color1 check" id="opakowanieReport" onclick="changeColor(this, 'input_5')">N/A</a>
                                <br />
                                <input class="form-control comment" placeholder="Proszę wpisać komentarz" id="input_5" hidden />
                            </div><br />
                            <div class="form-group" style="margin-top:10px">
                                <span class="spanDecor" style="display: inline-block">Lepkość produktu</span>
                                <input class="form-control inputQA" id="lepkość" required type="number" max="5000" style="display: inline-block" />
                            </div>
                            <div class="form-group" style="margin-top:10px">
                                <span class="spanDecor" style="display: inline-block">Ekstrakt</span>
                                <input class="form-control inputQA" id="ekstrakt" required type="number" max="100" style="display: inline-block" />
                            </div>
                            <div class="form-group" style="margin-top:10px">
                                <span class="spanDecor" style="display: inline-block">Ph</span>
                                <input class="form-control inputQA" id="ph" required type="number" max="20" style="display: inline-block" />
                            </div>
                            <div class="form-group">
                                <span class="spanDecor" style="display: inline-block">Temperatura przed rozlewem</span>
                                <input class="form-control inputQA" id="temperatura" required type="number" max="100" style="display: inline-block" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="" style="padding:5px">
                        <div class="col text-center">
                            <a id="pdfReporGenerator" style="margin-bottom: 10px; color: white" class="btn btn-primary">Generate PDF</a>
                        </div>
                        <span id="warningTextForRaport" style="color:red; font-size:small; font-style:normal"></span>
                    </div>

                </div>
            </div>
        </div>
    </div>

</main>
<footer>
    <div class="col text-center">
        <div class="modal fade" id="alertModal" style="height: min-content; " tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content" style="background-color: transparent;border:none">

                    <div class="modal-body" style="background-color: transparent">
                        <p style="text-align: center; color: red; font-weight: bold" id="alertMessage">Proszę sprawdzić czy wszystkie pola są wypełnione!</p>
                    </div>
                </div>
            </div>

        </div>
    </div>
</footer>



@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        var regExp = /[0-9][0-9][0-9][0-9][0-9][0-9][0-9]/;
        var button = document.getElementById("addList");
        var number = document.getElementById('numberCount');
        var count = document.getElementById('count');
        var numerZlecenia = document.getElementById('nrZlecenia');
        var countUpdate = document.getElementById('countUpdate');
        var num = 1;
        $(document).ready(function () {

            ShowDialog('#nZlecenie', '#zlecenie');
            ShowDialog('#btnWaste', '#waste');
            ShowDialog('#btnReport', '#report');

            StaticDialog('#zlecenie');
            StaticDialog('#waste');
            StaticDialog('#details');
            StaticDialog('#report');
            StaticDialog('#zlecenieUpdate');

            $('#closeNewZlecenie').click(function () {
                document.getElementById('noweZlecenie').reset();
                numerZlecenia.value = '';
                $('#warningTextForOrder').text("");
                $('#warning').text("");
                $('#warningCount').text('');
                $('#submitButton').attr('disabled', 'true');
                document.location.reload();

            });

            InputEvent();
            daTable = $('#zlecenia').DataTable({
                dom: 'Bfrtip',
                ajax: {
                    url: '/Home/GetZlecenia',
                    type: 'GET',
                    dataSrc: ''
                },
                rowId: 'Id',
                order: [[1, 'asc']],
                columnDefs: [
                    { className: 'dt-body-center', targets: [0, 1, 2, 3, 4] },
                    {
                        targets: [1, 2, 3, 4],
                        className: 'dt-head-center '
                    },
                    {
                        targets: 0,
                        width: '7%'
                    },
                    {
                        targets: [1, 2],
                        width: '25%'
                    },
                    {
                        targets: [3],
                        width: '13%'
                    },
                    {
                        targets: [4],
                        width: '30%'
                    }
                ],
                columns: [
                    { data: null, "sortable": false },
                    { data: "nrZlecenia" },
                    { data: "recipesName" },
                    { data: "count" },
                    {
                        data: "id", "render": function (data) {
                            return "<div style='width:100%; position: center'><div class='btn-group' role='group' id='groupButton'><a class='btn btn-success btn-small' style = 'height: 5%; margin-left: 5px; margin-right: 5px;' data-toggle='modal' onclick='Details(" + data + ")'>Szczegóły</a><a class='btn btn-danger btn-small' style='height: 5 %' onclick=Delete(" + data + ") id='Delete' >Usuń</a><a class='btn btn-warning btn-small' style = 'height: 5%; margin-left: 5px; margin-right: 5px;'  onclick=ChangeOrder(" + data + ") id='Delete' >Zmień</a></div ></div >"
                        },
                        orderable: false,
                        searchable: false,
                        width: "150px"
                    }
                ]
            });
            $('#zlecenia').DataTable().on('order.dt search.dt', function () {
                $('#zlecenia').DataTable().column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

            count.addEventListener('input', function () {
                this.value = this.value.trim().slice(0, 4);
                numerZlecenia.value = numerZlecenia.value.trim().slice(0, 7);
                var inputValue = numerZlecenia.value;
                if (this.value > 500 && this.value <= 3000) {
                    $('#warningCount').text('');
                    DefaultCheck(inputValue);
                }
                else {
                    $('#submitButton').attr('disabled', 'true');
                    $('#warningCount').text('Prosze sprawdzić ilość!')
                }
            });
            document.getElementById('submitForWaste').addEventListener('click', function () {
                var actualCount = [];
                var jsonData = [];
                var comments = [];
                var $table = $('#tableWaste tbody');
                var $trElements = $table.find('tr');
                var wasteTotalCount = $('#wasteTotalCount').val();
                var recepture = $('#wasteRecepture').val();
                var order = $('#ordersList option:selected').text();
                var listKeys = ['ingredientNumber', 'ingredientName', 'count', 'actualCount', 'waste', 'comment'];
                $trElements.each(function () {
                    var number = $(this).find('td').eq(0).text();
                    var name = $(this).find('td').eq(1).text();
                    var count = $(this).find('td').eq(3).text();
                    var inputWaste = $(this).find('td').eq(4).find('input').val();
                    var waste = $(this).find('td').eq(5).text();
                    var comment = $(this).find('td').eq(6).find('input').val();

                    var data = {};
                    data['ingredientNumber'] = number;
                    data['ingredientName'] = name;
                    data['count'] = count;
                    data['actualCount'] = inputWaste;
                    data['waste'] = waste;
                    data['comment'] = comment;
                    data['order'] = order;
                    data['recepture'] = recepture;
                    data['realisedCount'] = wasteTotalCount;

                    comments.push(comment);
                    actualCount.push(inputWaste);
                    jsonData.push(data);
                });
                if ($('#wasteTotalCount').val() >= 2000 && CheckIfEquals(0, actualCount) == 0 && CheckIfEquals('', comments) == 0) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetValues", "Home")',
                        dataType: 'json',
                        data: { 'jsonData': JSON.stringify(jsonData) },
                        success: function (data) {
                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'bottom-right',
                                iconColor: 'white',
                                customClass: {
                                    popup: 'colored-toast'
                                },
                                showConfirmButton: false,
                                timer: 1500,
                                timerProgressBar: false
                            })
                            Toast.fire({
                                icon: 'success',
                                title: 'Success'
                            });
                            $('#waste').modal('hide');
                            $('body').removeClass('modal-open');
                            $('.modal-backdrop').remove();
                            setTimeout(function(){
                                ReloadPage();
                            }, 1000);
                        },
                        error: function (error) {
                            console.log(JSON.stringify(error));
                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'bottom-right',
                                iconColor: 'white',
                                customClass: {
                                    popup: 'colored-toast'
                                },
                                showConfirmButton: false,
                                timer: 1500,
                                timerProgressBar: false
                            })
                            Toast.fire({
                                icon: 'error',
                                title: 'Error'
                            })
                        }
                    })
                    $('#waste').remove();
                }
            })
            document.getElementById("ordersList").addEventListener("change", (event) => {
                var id = event.target.value;
                var optionValue = event.target.options[event.target.selectedIndex].text;
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("CheckIfRelised", "Home")',
                    dataType: 'json',
                    data: { 'ordersNumber': optionValue },
                    success: function (data) {
                        var body = document.getElementById('wasteIngredients');
                        body.innerHTML = "";
                        var tBody = "<tbody id='wasteIngredients'></tbody>";
                        setTimeout(function () {
                            $('#tableWaste').append(tBody);
                        }, 50);
                        if (data['check'] != true) {
                            $.ajax({
                                type: 'Get',
                                url: '/Home/Details',
                                data: { 'id': id },
                                success: function (data) {
                                    $('#wasteOrder').val(data['details']['nrZlecenia']);
                                    $('#wasteRecepture').val(data['details']['recipesName']);
                                    $('#wasteCount').val(data['details']['count']);
                                    $('#wasteTotalCount').removeAttr('disabled');
                                    $('#wasteTotalCount').val('');

                                    $('#wasteIngredients').empty();
                                    $('#mainTR').remove();
                                    var trElement = $('<tr id="mainTR"><th>Nr.materialu </th><th> Nazwa surowca </th><th> Ilość(planowane) </th><th> Ilość(po obliczenich) </th><th> Faktyczna ilość </th><th> Straty </th><th> Komentarze </th></tr>');
                                    $('#tableWaste thead').append(trElement);

                                    $.each(data['opakowania'], function (index, value) {
                                        $('#wasteIngredients').append("<tr><td class='wasteRow' id='matNumber_" + index + "' onclick = 'Copy($(this))' > " + data['opakowania'][index]['materialNumber'] + " </td><td class='wasteRow'>" + data['opakowania'][index]['name'] +
                                            "</td><td class='wasteRow'>" + data['details']['ilośćOpakowań'] + ' szt. ' + "</td><td class='wasteRow actualWastePack' id='actualWaste'></td><td><input class='form-control' required id='wasteDefault' oninput='GetValue($(this))'/></td><td class='wasteRow' id='wasteAfterInput'></td><td class='wasteRow'><input class='form-control' required id='comment' maxlength='50' value=''  hidden/></td></tr>");
                                    })
                                    $.each(data['items'], function (index, value) {
                                        if (data['items'][index]['item1'] != 0) {
                                            $('#wasteIngredients').append("<tr><td class='wasteRow' id='matNumber_" + index + "' onclick='Copy($(this))'>" + data['items'][index]['item1'] + "</td><td class='wasteRow'>" + data['items'][index]['item2'] +
                                                "</td><td class='wasteRow'>" + data['items'][index]['item3'] + ' kg ' + "</td><td class='wasteRow actualWaste' id='actualWaste'></td><td><input class='form-control' required oninput='GetValue($(this))' id='wasteDefault'/></td><td class='wasteRow' id='wasteAfterInput'></td><td class='wasteRow'><input required class='form-control' maxlength='50' id='comment' value=''  hidden/></td></tr>");
                                        } else {
                                            $('#wasteIngredients').append("<tr><td class='wasteRow'>" + '-' + "</td><td class='wasteRow '>" + data['items'][index]['item2'] + "</td><td class='wasteRow'>" + data['items'][index]['item3'] + ' kg ' + "</td></td><td class='wasteRow actualWaste' id='actualWaste'></td><td class='wasteRow'><input class='form-control' required  oninput='GetValue($(this))' id='wasteDefault'/></td><td class='wasteRow' id='wasteAfterInput'></td><td class='wasteRow'><input class='form-control' required id='comment' maxlength='50' value='' hidden/></td></tr>");
                                        }
                                    })
                                }
                            })
                        }
                        else {
                            $('#submitForWaste').attr('disabled', 'true');
                            $.ajax({
                                type: 'GET',
                                url: '@Url.Action("ReturnRelisedOrder", "Home")',
                                dataType: 'json',
                                data: { 'ordersNumber': optionValue },
                                success: function (data) {
                                    $('#wasteTotalCount').attr('disabled', 'true');
                                    $('#wasteTotalCount').val(data['relisedOrder']['count']);
                                    $('#wasteCount').val(data['relisedOrder']['count']);
                                    $('#wasteRecepture').val(data['relisedOrder']['recipeName']);
                                    $('#wasteIngredients').empty();
                                    $('#mainTR').remove();

                                    var trElement = $('<tr id="mainTR"><th>Nr.materialu </th><th> Nazwa surowca </th><th> Faktyczna ilość </th><th> Straty </th><th> Komentarze </th></tr>')
                                    $('#tableWaste thead').append(trElement);
                                    $.each(data['listOfWastePack'], function (index, value) {
                                        $('#wasteIngredients').append("<tr><td class='wasteRow' id='matNumber_" + index + "' onclick = 'Copy($(this))' > " + data['listOfWastePack'][index]['item1'] + " </td><td class='wasteRow'>" + data['listOfWastePack'][index]['item2'] +
                                            "</td><td class='wasteRow wasteCount' >" + data['listOfWastePack'][index]['item3'] + ' szt.' + "</td><td class='wasteRow actualWastePack' id='actualWaste'>" + data['listOfWastePack'][index]['item4'] + "</td><td>" + data['listOfWastePack'][index]['item5'] + "</td></tr>");
                                    })
                                    $.each(data['listOfWasteIngredients'], function (index, value) {
                                        $('#wasteIngredients').append("<tr><td class='wasteRow' id='matNumber_" + index + "' onclick = 'Copy($(this))' > " + data['listOfWasteIngredients'][index]['item1'] + " </td><td class='wasteRow'>" + data['listOfWasteIngredients'][index]['item2'] +
                                            "</td><td class='wasteRow wasteCount'>" + data['listOfWasteIngredients'][index]['item3'] + ' kg' + "</td><td class='wasteRow actualWastePack' id='actualWaste'>" + data['listOfWasteIngredients'][index]['item4'] + "</td><td>" + data['listOfWasteIngredients'][index]['item5'] + "</td></tr>");
                                    })

                                },
                                error: function (error) {
                                    console.log(JSON.stringify(error));
                                }
                            })

                        }
                    },
                    error: function (error) {
                        console.log(JSON.stringify(error));
                    }
                });
            });
            document.getElementById('wasteTotalCount').addEventListener('input', function (event) {
                var countTotal = event.target.value;
                var id = $('#wasteOrder option:selected').val();
                $.ajax({
                    type: 'Get',
                    url: '/Home/Details',
                    data: { 'id': id },
                    success: function (data) {
                        var n = 0;
                        var count = [];
                        var counPack = [];
                        $.each(data['items'], function (index, value) {
                            var ingredient = FindPercentage(countTotal, document.getElementById('wasteCount').value, parseFloat(data['items'][index]['item3']));
                            count.push(ingredient)
                        })

                        $('#tableWaste tbody tr').each(function (tr_idx, tr) {
                            $(tr).children('td.actualWastePack').each(function (td_idx, td) {
                                $.each(data['opakowania'], function (index, value) {
                                    $(td).text(Math.round(FindPercentage(countTotal, document.getElementById('wasteCount').value, parseFloat(data['details']['ilośćOpakowań']))));
                                });
                            })
                        })
                        $('#tableWaste tbody tr').each(function () {
                            $(this).find('td.actualWaste').each(function (index, td) {
                                $(this).text(count[n].toFixed(2));
                                n++;
                            });
                        });
                        ChangeTAfterDelete(countTotal);
                        if (countTotal > 0) {
                            $('#submitForWaste').removeAttr('disabled');
                        } else {
                            $('#submitForWaste').attr('disabled', 'true');
                        }
                    }
                })
            })
            document.getElementById('reportOrdersList').addEventListener('change', function (event) {
                var optionValue = event.target.options[event.target.selectedIndex].text;
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("CheckIfRelised", "Home")',
                    dataType: 'json',
                    data: { 'ordersNumber': optionValue },
                    success: function (data) {
                        if (data['check'] == true) {
                            $('#wasteReportRecepture').val(data['recipe']);
                            $('#wasteTotalCountReport').val(data['relisedCount']);
                        } else {
                            $('#wasteReportRecepture').val('');
                            $('#wasteTotalCountReport').val('');
                        }
                    },
                    error: function (error) {
                        console.log(JSON.stringify(error));
                    }
                });

            })
            document.getElementById('pdfReporGenerator').addEventListener('click', function () {
                var pasteryzacja = BoolCheck('pasteryzacja');
                var ciałaObce = BoolCheck('ciałaObce');
                var data = BoolCheck('dataOpakowania');
                var zgodnośćReceptura = BoolCheck('zgodnośćReceprura');
                var metaldetektor = BoolCheck('metaldetektor');
                var opakowanie = BoolCheck('opakowanieReport');

                var pasteryzacjaKomment = GetComment('input_0');
                var ciałaObceKomment = GetComment('input_1');
                var dataKomment = GetComment('input_2');
                var zgodnośćRecepturaKomment = GetComment('input_3');
                var metaldetektorKomment = GetComment('input_4');
                var opakowanieKomment = GetComment('input_5');

                var lepkość = GetComment('lepkość');
                var ekstrakt = GetComment('ekstrakt');
                var ph = GetComment('ph');
                var temperatura = GetComment('temperatura');

                var qaResult = {
                    Pasteryzacja: pasteryzacja,
                    PasteryzacjaKomentarz: pasteryzacjaKomment,

                    CiałaObce: ciałaObce,
                    CiałaObceKomentarz: ciałaObceKomment,

                    DataOpakowania: data,
                    DataOpakowaniaKomentarz: dataKomment,

                    Receptura: zgodnośćReceptura,
                    RecepturaKomentarz: zgodnośćRecepturaKomment,

                    MetalDetektor: metaldetektor,
                    MetalDetektorKomentarz: metaldetektorKomment,

                    Opakowanie: opakowanie,
                    OpakowanieKomentarz: opakowanieKomment,

                    Lepkość: lepkość,
                    Ekstrakt: ekstrakt,
                    Ph: ph,
                    Temperatura: temperatura
                };

                var relisedOrder = $('#reportOrdersList option:selected');

                if (CheckIfEmptyComment() === false && relisedOrder.val() !== '-1' && CheckQA() === false) {
                    fetch(`/Home/GeneretaPdfFile?check=${JSON.stringify(qaResult)}&relisedOrder=${JSON.stringify(relisedOrder)}`)
                        .then(function (response) {
                            response.text();
                            document.location.reload();

                        })
                        .then(html => {
                            window.open(`/Home/GeneretaPdfFile?check=${JSON.stringify(qaResult)}&relisedOrder=${relisedOrder.text()}`);
                        })
                        .catch(error => console.error('Error:', error));
                }
                else {
                    ShowAlertBox();
                }


            });
        })
        function BoolCheck(id) {
            var input = document.getElementById(id);
            if (input.innerText === "OK") {
                return true;
            }
            else {
                return false;
            }
        }
        function GetComment(id) {
            var input = document.getElementById(id);

            return input.value;
        }
        function CheckQA() {
            var inputs = document.getElementsByClassName('inputQA');
            var empty = false;

            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].value === '') {
                    empty = true;
                    break;
                }
            }
            return empty;
        }
        function ReloadPage() {
            document.location.reload();
        }
        function CheckIfEmptyComment() {
            var inputs = document.querySelectorAll(".comment:not([hidden])");
            var isEmpty = false;

            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].value === "") {
                    isEmpty = true;
                    break;
                }
            }
            return isEmpty;
        }
        function ShowAlert() {
            $('#alertModal').modal('show');
            setTimeout(function () {
                $('#alertModal').modal('hide');
            }, 1000);
        }
        function CheckFormByComment() {
            var buttons = document.getElementsByClassName("check");
            var submitButton = document.getElementById("submitForReport");
            var comments = document.getElementsByClassName("comment");
            var allClicked = false;

            for (var i = 0; i < buttons.length; i++) {
                var button = buttons[i];
                var value = button.innerText;

                if (value === "N/A") {
                    allClicked = true;
                    break;
                }
            }

            submitButton.disabled = allClicked;
        }

        function CheckForm() {
            var buttons = document.getElementsByClassName("color1");
            var submitButton = document.getElementById("submitForReport");

            var allClicked = true;

            for (var i = 0; i < buttons.length; i++) {
                var button = buttons[i];
                var value = button.innerText;
                var commentField = document.getElementById("input_" + [i]);

                if (value !== "OK" && value !== "NOK") {
                    allClicked = false;
                    break;
                }

                if (value === "NOK" && commentField.value === "") {
                    allClicked = false;
                    break;
                }
            }

            submitButton.disabled = !allClicked;
        }
        function Reporting(button, input, qaValue, commentValue) {
            var buttonsValue = document.getElementById(button).textContent;
            var comment = document.getElementById(input);
            var data = {};
            var listResult = [];

            if (comment.hasAttribute('hidden')) {
                data[qaValue] = buttonsValue;
                listResult.push(data);

                return listResult;
            }
            else {
                data[qaValue] = buttonsValue;
                data[commentValue] = comment.value;
                listResult.push(data);

                return listResult;
            }
        }
        function changeColor(button, commentNok) {

            switch (true) {
                case button.classList.contains("color1"):
                    button.classList.remove("color1");
                    button.classList.add("color2");
                    button.classList.add('clicked');
                    button.text = "OK";
                    $('#' + commentNok).attr('hidden', 'true');
                    $('#' + commentNok).removeAttr('required');
                    CheckFormByComment();
                    break;
                case button.classList.contains("color2"):
                    button.classList.remove("color2");
                    button.classList.add("color3");
                    button.classList.add('clicked');
                    button.text = "NOK";
                    $('#' + commentNok).removeAttr('hidden');
                    $('#' + commentNok).attr('required', 'true');
                    CheckFormByComment();
                    break;
                case button.classList.contains("color3"):
                    button.classList.remove("color3");
                    button.classList.add("color1");
                    button.classList.add('clicked');
                    button.text = "N/A";
                    $('#' + commentNok).attr('hidden', 'true');
                    $('#' + commentNok).removeAttr('required');
                    CheckFormByComment();
                    break;
            }

        }
        function CheckIfEquals(elem, arrValues) {
            if ($.inArray(elem, arrValues) != -1) {
                return 1;
            } else {
                return 0;
            }
        }
        function ShowDialog(elem, dialog) {
            $(elem).on('click', function () {
                $(dialog).modal('show');
            });
        }
        function StaticDialog(elem) {
            $(elem).modal({ backdrop: 'static', keyboard: false });
        }
        function ChangeTAfterDelete(input) {
            var $table = $('#tableWaste tbody');
            var $trElements = $table.find('tr');

            $trElements.each(function () {
                var count = $(this).find('td').eq(3).text();
                var inputWaste = $(this).find('td').eq(4).find('input');
                var waste = $(this).find('td').eq(5);
                var comment = $(this).find('td').eq(6).find('input');
                if (inputWaste.val() != 0 && input != 0) {
                    var value = (100 - ((parseFloat(inputWaste.val()) / parseFloat(count)) * 100)).toFixed(2);
                    switch (true) {
                        case value < 0:
                            waste.css('color', 'red').text(value + ' %');
                            if (value < -1) {
                                comment.removeAttr("hidden");
                                comment.val('');
                            } else {
                                comment.attr('hidden', 'true');
                                comment.val("OK");
                            }
                            break;
                        case value > 0:
                            waste.css('color', 'green').text('+' + value + ' %');
                            if (value > 1) {
                                comment.removeAttr("hidden");
                                comment.val('');
                            } else {
                                comment.attr('hidden', 'true');
                                comment.val("OK")
                            }
                            break;
                        case value == 0:
                            waste.css('color', 'black').text(value);
                            comment.val("OK")
                            comment.attr('hidden', 'true');
                            break;
                    }
                } else {
                    waste.css('color', 'black').text('');
                    inputWaste.val('');
                    comment.attr('hidden', 'true');

                }
            });
        }
        function GetValue(input) {
            const tr = input.parent().parent().index();
            var count = $('#tableWaste tbody tr').eq(tr).find('td').eq(3).text();
            var comment = $('#tableWaste tbody tr').eq(tr).find('td').eq(6).find('input');
            var value = (100 - ((parseFloat(input.val()) / parseFloat(count)) * 100)).toFixed(2);
            if (input.val() == '') {
                $('#tableWaste tbody tr').eq(tr).find('td').eq(5).text('');
                comment.attr('hidden', 'true');
            } else {
                switch (true) {
                    case value < 0:
                        $('#tableWaste tbody tr').eq(tr).find('td').eq(5).css('color', 'red').text(value + ' %');
                        if (value < -1) {
                            comment.removeAttr("hidden");
                            comment.val('');
                        } else {
                            comment.attr('hidden', 'true');
                            comment.val("OK");
                        }
                        break;
                    case value > 0:
                        $('#tableWaste tbody tr').eq(tr).find('td').eq(5).css('color', 'green').text('+' + value + ' %');
                        if (value > 1) {
                            comment.removeAttr("hidden");
                            comment.val('');
                        } else {
                            comment.attr('hidden', 'true');
                            comment.val("OK");
                        }
                        break;
                    case value == 0:
                        $('#tableWaste tbody tr').eq(tr).find('td').eq(5).text(value);
                        comment.val("OK");
                        comment.attr('hidden', 'true');
                        break;
                }
            }
        }
        function Check(id) {
            return $(id + ' option:selected').val() != -1;
        }
        function GetDataFromColumn(column, list) {
            $("#tableWaste tbody tr td:nth-child(" + column + ")").each(function () {
                var value = $(this).text();
                list.push(value);
            });
            return list;
        }
        function InputEvent() {
            document.getElementById('nrZlecenia').addEventListener('keyup', function () {
                this.value = this.value.trim().slice(0, 7);
                var inputValue = this.value;
                if (inputValue.length == 7) {
                    $.ajax({
                        type: 'Get',
                        url: '@Url.Action("GetZlecenie", "Home")/',
                        dataType: 'json',
                        data: { 'numerZlecenia': inputValue },
                        success: function (data) {
                            if (data['resultForOrders'] == true || data['resultForRelised'] == true) {
                                $('#warning').text("Zlecenie zrealizowane albo taki numer zlecenia już istnieje!")
                                $('#submitButton').attr('disabled', 'true');
                            }
                            else {
                                $('#warning').text("");
                                if (Check('#recipies') && Check('#opakowanie') && Check('#dekel') && Check('#etykieta') && count.value > 500 && count.value <= 3000) {
                                    $('#submitButton').removeAttr('disabled');
                                    $('#warningTextForOrder').text("");
                                }
                                else {
                                    $('#submitButton').attr('disabled', 'true');
                                    $('#warningTextForOrder').text('Prosze dokładnie sprawdzić czy wszystkie opcje są wybrane!');
                                }
                            }
                        }
                    })
                } else {
                    $('#submitButton').attr('disabled', 'true');
                }

            });
            $('select').on('change', function () {
                numerZlecenia.value = numerZlecenia.value.trim().slice(0, 7);
                var inputValue = numerZlecenia.value;
                DefaultCheck(inputValue);
            })
        }
        function DefaultCheck(input) {
            if (input.length == 7 && Check('#recipies') && Check('#opakowanie') && Check('#dekel') && Check('#etykieta')) {
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("GetZlecenie", "Home")/',
                    dataType: 'json',
                    data: { 'numerZlecenia': input },
                    success: function (data) {
                        if (data['result'] == true) {
                            $('#warning').text("Zlecenie zrealizowane albo taki numer zlecenia już istnieje!")
                            $('#submitButton').attr('disabled', 'true');
                        }
                        else {
                            $('#warning').text("");
                            $('#submitButton').removeAttr('disabled');
                            $('#warningTextForOrder').text("");
                        }
                    }
                })
                $('#warningTextForOrder').text("");
            }
            else {
                $('#submitButton').attr('disabled', 'true');
                $('#warningTextForOrder').text('Prosze dokładnie sprawdzić czy wszystkie opcje są wybrane!');
            }
        }
        function FindPercentage(number_1, number_2, number_3) {
            var percent = (number_1 / number_2) * 100;
            var count = (percent / 100) * number_3;
            return count;
        }
        function Reset(input) {
            input.empty();
        }
        function Add(input) {
            var opakowania = new Array();
            $.ajax({
                type: 'Post',
                async: false,
                url: '/Home/Opakowania',
                success: function (data) {
                    opakowania = data;
                }
            })
            if (parseInt(input.value) < 4) {
                $('#addList').removeAttr('hidden');
                var count = parseInt(input.value) + 1;
                input.value = count;
                var new_list = "<div class='form-group'><select class='form-select' id='new_" + count + "'></select></div>";
                $('#addItem').append(new_list);
                $.each(opakowania, function (index, value) {
                    $('#new_' + count).append("<option value='" + value + "'>" + value + "</option>");
                })
                $('#remove').removeAttr('hidden');
                if (parseInt(input.value) == 4) {
                    document.getElementById('addList').hidden = true;
                }
            } else {
                document.getElementById('addList').hidden = true;
            }
        }
        function Remove(input) {
            var value = parseInt(input.value);
            if (value > 1) {
                input.value = value - 1;
                $('#new_' + value).remove();
                $('#addList').removeAttr('hidden');
                $('#remove').removeAttr('hidden');
                if (value == 2) {
                    document.getElementById('remove').hidden = true;
                }
            }
            else {
                document.getElementById('remove').hidden = true;
            }
        }
        function AddList(input) {
            var value = parseInt(input.value);
            if (value == 1) {
                $('#opakowanie').removeAttr('hidden');
                input.value = value + 1;
                document.getElementById('remove').hidden = false;
            }
            else if (value == 2) {
                $('#pokrywa').removeAttr('hidden');
                input.value = value + 1;
                document.getElementById('remove').hidden = false;
            }
            else if (value == 3) {
                $('#naklejka').removeAttr('hidden');
                document.getElementById('add').hidden = true;
                document.getElementById('remove').hidden = false;
            }
            else {
                document.getElementById('opakowanie').hidden = true;
                document.getElementById('pokrywa').hidden = true;
                document.getElementById('naklejka').hidden = true;
                document.getElementById('add').hidden = true;
            }
        }
        function RemoveList(input) {
            var value = parseInt(input.value);
            if (value == 2) {
                document.getElementById('pokrywa').hidden = true;
                document.getElementById('add').hidden = false;
                input.value = value - 1;
            }
            else if (value == 1) {
                document.getElementById('opakowanie').hidden = true;
                document.getElementById('add').hidden = false;
                document.getElementById('remove').hidden = true;
            }
            else if (value == 3) {
                document.getElementById('naklejka').hidden = true;
                input.value = value - 1;
            }
        }

        function ShowAlertBox() {
            $('#alertModal').modal('show');
            setTimeout(function () {
                $('#alertModal').modal('hide');
            }, 2000);
        }
        function Details(id) {
            $.ajax({
                type: 'Get',
                url: '/Home/Details/' + id,
                success: function (data) {

                    $('#details').modal('show');
                    $('#detailsNrZlecenia').val(data['details']['nrZlecenia']);
                    $('#detailsReceptura').val(data['details']['recipesName']);
                    $('#totalCount').val(data['details']['count']);
                    $.each(data['opakowania'], function (index, value) {
                        $('#numerMaterialu').append("<tr><td id='matNumber__" + index + "' onclick='Copy($(this))'>" + data['opakowania'][index]['materialNumber'] + "</td><td>" + data['opakowania'][index]['name'] +
                            "</td><td>" + data['details']['ilośćOpakowań'] + ' szt. ' + "</td></tr>");
                    })
                    $.each(data['items'], function (index, value) {
                        if (data['items'][index]['item1'] != 0) {
                            $('#numerMaterialu').append("<tr><td id='matNumber_" + index + "' onclick='Copy($(this))'>" + data['items'][index]['item1'] + "</td><td>" + data['items'][index]['item2'] +
                                "</td><td>" + data['items'][index]['item3'] + ' kg ' + "</td></tr>");
                        } else {
                            $('#numerMaterialu').append("<tr><td>" + '-' + "</td><td>" + data['items'][index]['item2'] + "</td><td>" + data['items'][index]['item3'] + ' kg ' + "</td></tr>");
                        }
                    })

                }
            })
        }

        function Delete(id) {
            Swal.fire({
                title: 'Delete this order?',
                text: "You won't be able to revert this!",
                icon: 'question',
                showCancelButton: true,
                showConfirmButton: true,
                cancelButtonText: 'Back',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete", "Home")/' + id,
                        success: function (data) {
                            if (data.success) {
                                $('#zlecenia').DataTable().ajax.reload(null, false);
                            }
                        }
                    })
                    Swal.fire(
                        'Removed!',
                        'Bin has been removed.',
                        'success'
                    )
                }
            })
        }
        function SelectChanged(id) {
            document.getElementById(id).addEventListener('change', function () {
                if (Check('#recipiesUpdate') && Check('#opakowanieUpdate') && Check('#dekelUpdate') && Check('#etykietaUpdate') && countUpdate.value >= 500 && countUpdate.value <= 3000) {
                    $('#submitButtonUpdate').removeAttr('disabled');
                    $('#warningTextForOrderUpdate').text("");
                }
                else {
                    $('#submitButtonUpdate').attr('disabled', 'true');
                    $('#warningTextForOrderUpdate').text('Prosze dokładnie sprawdzić czy wszystkie opcje są wybrane!');
                }
            })
        }
        function ChangeOrder(id) {
            $.ajax({
                type: 'Get',
                url: '@Url.Action("EditOrder", "Home")',
                dataType: 'json',
                data: { 'id': id },
                success: function (data) {
                    $('#zlecenieUpdate').modal('show');
                    $('#zlecenieId').val(data['id']);
                    $('#nrZlecenieUpdate').val(data['nrZlecenia']);
                    $('#recipiesUpdate').val(data['recipesName']).attr('selected', 'selected');
                    $('#countUpdate').val(data['count']);
                    $('#opakowanieUpdate').val(data['opakowanie']).attr('selected', 'selected');
                    $('#dekelUpdate').val(data['pokrywaNekrętka']).attr('selected', 'selected');
                    $('#etykietaUpdate').val(data['naklejka']).attr('selected', 'selected');
                    var select = ['recipiesUpdate', 'opakowanieUpdate', 'dekelUpdate', 'etykietaUpdate'];
                    $.each(select, function (index, element) {
                        SelectChanged(element);
                    });
                },
                error: function (response) {
                    alert('Some error occured!');
                }

            })
        }
        function FormChange() {
            document.getElementById('noweZlecenie').reset();
            $('#title').text('Nowe zlecenie');
            $('#noweZlecenie').attr('action', "/Home/NoweZlecenie");
            $('#nrZlecenia').prop('readonly', false);
            $('#nrZlecenia').val();
            $('#recipies').val('-1').attr('selected', 'selected');
            $('#recipies').prop('disabled', false);
            $('#opakowanie').val('-1').attr('selected', 'selected');
            $('#opakowanie').prop('disabled', false);
            $('#dekel').val('-1').attr('selected', 'selected');
            $('#dekel').prop('disabled', false);
            $('#etykieta').val('-1').attr('selected', 'selected');
            $('#etykieta').prop('disabled', false);
            $('#submitButton').attr('disabled', 'true');
        }
    </script>
}